name: Build ROM for Houji
on:
  workflow_dispatch:
    inputs:
      URL:
        description: "移植包下载地址"
        required: true
        default: 'https://ultimateota.d.miui.com/OS1.0.21.0.UNACNXM/miui_AURORA_OS1.0.21.0.UNACNXM_f4f297a63f_14.0.zip?t=1731743545&s=ff54a4335ae0b21b58e575d194a3acf9'
      VENDOR_URL:
        description: "底包下载地址"
        required: true
        default: 'https://cdnorg.d.miui.com/OS1.0.45.0.UNCCNXM/miui_HOUJI_OS1.0.45.0.UNCCNXM_8597412d79_14.0.zip'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 最大化构建环境
        uses: easimon/maximize-build-space@master
        with:
          swap-size-mb: 8192
          root-reserve-mb: 4096
          temp-reserve-mb: 4096
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
      - name: 检出仓库文件
        uses: actions/checkout@main
      - name: 构建 ROM
        run: |
          sudo bash "$GITHUB_WORKSPACE"/make.sh ${{ github.event.inputs.URL }} ${{ github.event.inputs.VENDOR_URL }} $GITHUB_ENV $GITHUB_WORKSPACE
      - name: 处理 ROM
        run: |
          mkdir -p "$GITHUB_WORKSPACE"/GithubRelease
          cd "$GITHUB_WORKSPACE"/GithubRelease
          sudo split -b 1536M -d "$GITHUB_WORKSPACE"/zip/${{ env.rom_name }} ${{ env.rom_name }}
          cd "$GITHUB_WORKSPACE"
          touch file.log
          echo -e "底包版本: ${{ env.vendor_os_version }}\n底包安全补丁版本: ${{ env.vendor_security_patch }}\n底包基线版本: ${{ env.vendor_base_line}}\n\n移植包版本: ${{ env.port_os_version }}\n移植包安全补丁版本: ${{ env.port_security_patch }}\n移植包基线版本: ${{ env.port_base_line }}" > file.log
      - name: 上传到 Github Release
        uses: ncipollo/release-action@main
        with:
          artifacts: ${{ github.workspace }}/GithubRelease/*
          name: ${{ env.port_os_version }}
          tag: ${{ env.port_os_version }}
          bodyFile: "${{ github.workspace }}/file.log"
          allowUpdates: true
          artifactErrorsFailBuild: true
      - name: 上传到 Oracle S3
        if: github.repository == 'YuKongA/Build_houji_port_rom'
        run: |
          sudo -v ; curl https://rclone.org/install.sh | sudo bash
          mkdir -p ~/.config/rclone/
          echo ${{ secrets.confbase64 }} > base64.txt
          base64 --decode base64.txt > ~/.config/rclone/rclone.conf
          rclone delete kr:/public-bucket/houji
          rclone mkdir kr:/public-bucket/houji
          rclone copy -P "$GITHUB_WORKSPACE"/zip/${{ env.rom_name }} kr:/public-bucket/houji
